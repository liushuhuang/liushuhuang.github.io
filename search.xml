<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据库</title>
      <link href="/2022/09/07/SQL%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/09/07/SQL%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><blockquote><p>create database 库名  （创建数据库）</p><p>drop database 库名     （删除数据库）</p></blockquote><h1 id="表"><a href="#表" class="headerlink" title="表"></a>表</h1><h2 id="创建和删除"><a href="#创建和删除" class="headerlink" title="创建和删除"></a>创建和删除</h2><blockquote><p>create table 表名(字段1名  字段1属性  设置主键或外键,字段2名  字段2属性…………)</p><p>主键设置 primary key,</p><p>外键设置 foreign key(属性名)  references 外键所属的表名(属性名)</p></blockquote><blockquote><p>删除表</p><p>drop table 表名</p></blockquote><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><blockquote><p>增加外键</p><p>alter table 表名 add constraint 外键约束名 foreign key(列名) references 引用外键表(列名)</p><p>增加主键</p><p>alter table 表名 add primary key(字段1，字段2)  </p><p>删除外键</p><p>alter table 表名  drop constraint 外键名</p><p>增加一列</p><p>alter table 表名  add 列名  列属性</p><p>删除一列</p><p>alter table 表名 drop 列名</p><p>更改列名</p><p><strong>exec sp_rename</strong> ‘表名.列名’,’新列名’,’column’;</p><p>更改列的属性</p><p>alter table   表名  alter <strong>column</strong> 列名  新属性</p></blockquote><h1 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h1><h2 id="增"><a href="#增" class="headerlink" title="增"></a>增</h2><blockquote><p>insert into 表名(属性名1,属性名2 …….) values(属性值1,属性值2，属性值3……..);</p></blockquote><h2 id="删"><a href="#删" class="headerlink" title="删"></a>删</h2><blockquote><p>删除记录</p><p>delete from 表名 where 条件</p></blockquote><h2 id="改"><a href="#改" class="headerlink" title="改"></a>改</h2><blockquote><p>更新记录</p><p>updata 表名  set  列名 &#x3D;  值 where  条件</p></blockquote><h1 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h1><h2 id="1-查询出生年份"><a href="#1-查询出生年份" class="headerlink" title="1.查询出生年份"></a>1.查询出生年份</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname,<span class="number">2022</span> <span class="operator">-</span> age <span class="keyword">from</span> stu</span><br></pre></td></tr></table></figure><h2 id="2-指定结果的显示列名"><a href="#2-指定结果的显示列名" class="headerlink" title="2.指定结果的显示列名"></a>2.指定结果的显示列名</h2><blockquote><p>select 列名1 as 显示名1,列名2 as 显示名2 ………..from   表名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">as</span> nn,<span class="number">2022</span> <span class="operator">-</span> age <span class="keyword">as</span> birth_year <span class="keyword">from</span> stu</span><br></pre></td></tr></table></figure><h2 id="3-查询去重"><a href="#3-查询去重" class="headerlink" title="3.查询去重"></a>3.查询去重</h2><blockquote><p>select <strong>distinct</strong>  列名  from  表名</p><p><code>一定要加列名，如果是</code> select <strong>distinct</strong>  *  from  表名  <code>这种写法没办法进行去重，因为没有指定去重目标</code></p></blockquote><h2 id="4-like"><a href="#4-like" class="headerlink" title="4.like"></a>4.like</h2><blockquote><p>如果不使用通配符，like就相当于&#x3D;</p></blockquote><h3 id="4-1通配符"><a href="#4-1通配符" class="headerlink" title="4.1通配符%"></a>4.1通配符%</h3><blockquote><p>%表示任意字符出现任意次数（包含0次）</p><p>搜寻姓刘的学生</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">&#x27;刘%&#x27;</span>；</span><br></pre></td></tr></table></figure><blockquote><p>查询名字中有康的学生</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">&#x27;%刘%&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="4-2通配符"><a href="#4-2通配符" class="headerlink" title="4.2通配符_"></a>4.2通配符_</h3><blockquote><p>只适用于匹配单个字符,任意字符出现一次,不包含0；</p><p>查找姓名第二个字为述的学生</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu  where sname like &#x27;_述%&#x27;；</span><br></pre></td></tr></table></figure><h2 id="5-查询条件不等于的表示"><a href="#5-查询条件不等于的表示" class="headerlink" title="5.查询条件不等于的表示"></a>5.查询条件不等于的表示</h2><blockquote><p>查询时的不等于的表示是a&lt;&gt;b;表示a不等于b</p><p>还可以直接使用！&#x3D;来表示</p></blockquote><h2 id="6-范围查询"><a href="#6-范围查询" class="headerlink" title="6.范围查询"></a>6.范围查询</h2><blockquote><p>1.使用不等式的组合来查询；</p><p>2.使用between…. and ….;</p><p>例：查询年龄18 到 20岁的名字</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> stu  <span class="keyword">where</span> age<span class="operator">&gt;=</span><span class="number">18</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span><span class="number">20</span>;</span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> stu  <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">18</span> <span class="keyword">and</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure><h2 id="7-查询在某个集合里的记录（例：查询课程号为1或2的课程）"><a href="#7-查询在某个集合里的记录（例：查询课程号为1或2的课程）" class="headerlink" title="7.查询在某个集合里的记录（例：查询课程号为1或2的课程）"></a>7.查询在某个集合里的记录（例：查询课程号为1或2的课程）</h2><blockquote><p>采用or连接条件或者使用in</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cno <span class="operator">=</span> <span class="number">1</span> <span class="keyword">or</span> cno <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cno <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="8-查询不在集合里的记录"><a href="#8-查询不在集合里的记录" class="headerlink" title="8.查询不在集合里的记录"></a>8.查询不在集合里的记录</h2><blockquote><p>使用not in</p><p>例：查询课程号不是1和2的课程</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from sc where sno not in (1,2);</span><br></pre></td></tr></table></figure><h2 id="9-查询空或者非空"><a href="#9-查询空或者非空" class="headerlink" title="9.查询空或者非空"></a>9.查询空或者非空</h2><blockquote><p>使用is null 和 is not null</p></blockquote><h1 id="聚集函数"><a href="#聚集函数" class="headerlink" title="聚集函数"></a>聚集函数</h1><h2 id="1-order-by（排序）"><a href="#1-order-by（排序）" class="headerlink" title="1.order  by（排序）"></a>1.order  by（排序）</h2><blockquote><p>order  by默认是升序</p><p>例：查询学生成绩按升序排列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  <span class="operator">*</span>  <span class="keyword">from</span> sc <span class="keyword">order</span> <span class="keyword">by</span>  grade</span><br></pre></td></tr></table></figure><blockquote><p>直接order  by就是升序</p><p>要降序在后面加一个desc即可</p><p>例：查询学生成绩按降序序排列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  <span class="operator">*</span>  <span class="keyword">from</span> sc <span class="keyword">order</span> <span class="keyword">by</span>  grade <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="2-COUNT"><a href="#2-COUNT" class="headerlink" title="2.COUNT"></a>2.COUNT</h2><blockquote><p>count(*)是统计总的记录数</p><p>count(列名)统计某一列非空的记录数</p><p>例：统计学生总个数</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu</span><br></pre></td></tr></table></figure><blockquote><p>统计选修了课程的学生</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span><span class="operator">*</span><span class="keyword">distinct</span><span class="operator">*</span><span class="operator">*</span> sno) <span class="keyword">from</span> sc</span><br></pre></td></tr></table></figure><blockquote><p><code>distinct</code>用于去除重复</p></blockquote><h2 id="3-AVG"><a href="#3-AVG" class="headerlink" title="3.AVG"></a>3.AVG</h2><blockquote><p>计算指定列的平均值(必须是数的类型，varchar这种无法使用)</p><p>例：计算选修了20201号课程的学生平均成绩</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">AVG</span>(grade) <span class="keyword">from</span> sc <span class="keyword">where</span> cno <span class="operator">=</span> <span class="number">20201</span></span><br></pre></td></tr></table></figure><h2 id="4-max-min"><a href="#4-max-min" class="headerlink" title="4.max  min"></a>4.max  min</h2><blockquote><p>计算指定列的最大最小值</p><p>例：计算选修了20201号课程的学生最高,最低成绩</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(grade) , <span class="built_in">min</span>(grade)   <span class="keyword">from</span> sc <span class="keyword">where</span> cno <span class="operator">=</span> <span class="number">20201</span></span><br></pre></td></tr></table></figure><h2 id="5-group-by"><a href="#5-group-by" class="headerlink" title="5.group by"></a>5.group by</h2><blockquote><p>以指定的列来进行分组</p><p>例：查询各课程号及其选修人数</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> cno , <span class="built_in">count</span>(sno)  <span class="keyword">as</span> num <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cno</span><br></pre></td></tr></table></figure><blockquote><p><code>PS:group by 如果要加条件，不能用where 要用HAVING</code></p></blockquote><h2 id="6-聚集函数不能用在where后"><a href="#6-聚集函数不能用在where后" class="headerlink" title="6.聚集函数不能用在where后"></a>6.聚集函数不能用在where后</h2><blockquote><p>在where之后不能使用聚集函数来做条件，如果要是用聚集函数当条件要用HAVING,配合group by一起使用</p><p>例：查询平均成绩大于90的学生学号和平均成绩</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sno , <span class="built_in">AVG</span>(grade)  <span class="keyword">from</span>  sc  <span class="keyword">group</span>  <span class="keyword">by</span>  sno  <span class="keyword">HAVING</span>  <span class="built_in">AVG</span>(grade) <span class="operator">&gt;=</span> <span class="number">90</span>  </span><br></pre></td></tr></table></figure><h1 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h1><h2 id="1-连接查询"><a href="#1-连接查询" class="headerlink" title="1.连接查询"></a>1.连接查询</h2><h3 id="1-1等值查询"><a href="#1-1等值查询" class="headerlink" title="1.1等值查询"></a>1.1等值查询</h3><blockquote><p>例：查询每个学生的信息和其选修课的信息</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> stu.<span class="operator">*</span> , sc.<span class="operator">*</span> <span class="keyword">from</span> stu , sc <span class="keyword">where</span> stu.sno <span class="operator">=</span> sc.sno</span><br></pre></td></tr></table></figure><blockquote><p>查询选修了20201课程的学生姓名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> stu , sc <span class="keyword">where</span> stu.sno <span class="operator">=</span> sc.sno <span class="keyword">and</span> sc.cno <span class="operator">=</span> <span class="string">&#x27;20201&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="1-2左外连接"><a href="#1-2左外连接" class="headerlink" title="1.2左外连接"></a>1.2左外连接</h3><blockquote><p>例：查询所有学生都信息和其选课信息，没有选课的学生也显示出来</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> stu.<span class="operator">*</span> , sc.<span class="operator">*</span> <span class="keyword">from</span> stu `<span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span>` sc  `<span class="keyword">on</span>`  stu.sno <span class="operator">=</span> sc.sno</span><br></pre></td></tr></table></figure><blockquote><p>注意是用on不是用where，outer可以省略</p><p>查询每个专业的学生人数，但是有点专业没有人</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  major.mno , <span class="built_in">count</span>(sno) <span class="keyword">from</span> major <span class="keyword">left</span> <span class="keyword">join</span> stu  <span class="keyword">on</span> major.mno <span class="operator">=</span> stu.mno <span class="keyword">group</span> <span class="keyword">by</span> major.mno</span><br></pre></td></tr></table></figure><blockquote><p>注意group by的位置，使用分组的时候必须在group by之后，连接时要先连接在分组</p></blockquote><h2 id="2-嵌套查询"><a href="#2-嵌套查询" class="headerlink" title="2.嵌套查询"></a>2.嵌套查询</h2><h3 id="2-1不相关查询（子查询不依赖父查询）"><a href="#2-1不相关查询（子查询不依赖父查询）" class="headerlink" title="2.1不相关查询（子查询不依赖父查询）"></a>2.1不相关查询（子查询不依赖父查询）</h3><blockquote><p>查询选修了20201课程的学生姓名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> stu  <span class="keyword">where</span> sno <span class="keyword">in</span> (<span class="keyword">select</span> sno <span class="keyword">from</span> sc <span class="keyword">where</span> cno <span class="operator">=</span> <span class="string">&#x27;20201&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意用的是in，因为返回结果有多个，要是子查询结果只有一个可以用 &#x3D; ，但是一般都是用in</p></blockquote><h3 id="2-2相关嵌套查询"><a href="#2-2相关嵌套查询" class="headerlink" title="2.2相关嵌套查询"></a>2.2相关嵌套查询</h3><blockquote><p>查询选修了20201课程的学生姓名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> stu  <span class="keyword">where</span> <span class="string">&#x27;20201&#x27;</span>  <span class="keyword">in</span> (<span class="keyword">select</span> cno  <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno <span class="operator">=</span> stu.sno)</span><br></pre></td></tr></table></figure><blockquote><p>查询选修了c语言课程的学生学号</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="string">&#x27;C语言&#x27;</span> <span class="keyword">in</span> (<span class="keyword">select</span> cname <span class="keyword">from</span> cou <span class="keyword">where</span> sc.cno <span class="operator">=</span> cou.cno)</span><br></pre></td></tr></table></figure><blockquote><p>查询每个学生超过他平均成绩的课程号</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sno,cno <span class="keyword">from</span> sc x <span class="keyword">where</span> grade <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">AVG</span>(grade) <span class="keyword">from</span> sc y <span class="keyword">group</span> <span class="keyword">by</span> sno  <span class="keyword">HAVING</span>  x.sno <span class="operator">=</span> y.sno)</span><br></pre></td></tr></table></figure><blockquote><p>还可以使用派生表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sno , cno <span class="keyword">from</span> sc,(<span class="keyword">select</span> sno,<span class="built_in">AVG</span>(grade)  <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sno ) <span class="keyword">as</span> avg_sc(avg_sno,avg_grade)</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> sc.sno <span class="operator">=</span> avg_sc.avg_sno  <span class="keyword">and</span>  sc.grade <span class="operator">&gt;</span> avg_sc.avg_grade</span><br></pre></td></tr></table></figure><h2 id="3-带exists的查询"><a href="#3-带exists的查询" class="headerlink" title="3.带exists的查询"></a>3.带exists的查询</h2><blockquote><p>查询选修了20201课程的学生姓名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> stu  <span class="keyword">where</span>  <span class="keyword">exists</span>   (<span class="keyword">select</span>   <span class="operator">*</span>  <span class="keyword">from</span> sc <span class="keyword">where</span>  sc.sno <span class="operator">=</span> stu.sno)</span><br></pre></td></tr></table></figure><blockquote><p><code>PS:exists()只会返回true或者false，他会在stu中选一行，进行匹配，匹配成功为true，证明这一行为所要查询的</code></p></blockquote><h2 id="4-集合查询"><a href="#4-集合查询" class="headerlink" title="4.集合查询"></a>4.集合查询</h2><h3 id="4-1-并-x2F-或（union）"><a href="#4-1-并-x2F-或（union）" class="headerlink" title="4.1 并&#x2F;或（union）"></a>4.1 并&#x2F;或（union）</h3><blockquote><p>查询选修了20201 或 20203课程的学号</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> sc  <span class="keyword">where</span> cno <span class="operator">=</span> <span class="string">&#x27;20201&#x27;</span>  <span class="keyword">union</span>  <span class="keyword">select</span> sno <span class="keyword">from</span> sc  <span class="keyword">where</span> cno <span class="operator">=</span> <span class="string">&#x27;20203&#x27;</span> </span><br></pre></td></tr></table></figure><blockquote><p>两条记录进行合并并且会去重</p></blockquote><h3 id="4-2交（intersect）"><a href="#4-2交（intersect）" class="headerlink" title="4.2交（intersect）"></a>4.2交（intersect）</h3><blockquote><p>查询年龄是18且mno为1的学生的学号</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  sno <span class="keyword">from</span> stu  <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">18</span>  <span class="operator">*</span><span class="operator">*</span><span class="keyword">intersect</span><span class="operator">*</span><span class="operator">*</span>  <span class="keyword">select</span>  sno <span class="keyword">from</span> stu  <span class="keyword">where</span> mno<span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="4-3差（except-）"><a href="#4-3差（except-）" class="headerlink" title="4.3差（except ）"></a>4.3差（except ）</h3><blockquote><p>查询年龄是18且mno为1的学生的学号</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  sno <span class="keyword">from</span> stu  <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">18</span>  <span class="keyword">except</span>  <span class="keyword">select</span>  sno <span class="keyword">from</span> stu  <span class="keyword">where</span> mno <span class="operator">!=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h2><blockquote><p>视图是从一个或几个基本表(或视图)导出的表。不同的是，它是一个虚表，数据库中只存放视图的定义，而不存放视图对应的数据，这些数据仍然存放在原本的基本表中。所以一旦基本表发生变化，从视图中查询的数据也就随之改变。</p><p>作用之一:视图更加方便用户的查询.</p></blockquote><h2 id="2-创建视图"><a href="#2-创建视图" class="headerlink" title="2.创建视图"></a>2.创建视图</h2><blockquote><p>creat view 视图名 as 查询语句</p><p>例：建立一个查询学生姓名，学号，年龄的视图</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> v_stu <span class="keyword">as</span> <span class="keyword">select</span> sname , age , sno  <span class="keyword">from</span> stu</span><br></pre></td></tr></table></figure><blockquote><p>注意：时如果有列是聚集函数计算出来的，比如sum，avg这些计算出来的，会没有列名，那么定义视图时必须给他们定义一个列名</p></blockquote><h2 id="3-利用视图进行查询"><a href="#3-利用视图进行查询" class="headerlink" title="3.利用视图进行查询"></a>3.利用视图进行查询</h2><blockquote><p>视图的查询和表的查询是一样的</p></blockquote><h2 id="4-修改"><a href="#4-修改" class="headerlink" title="4.修改"></a>4.修改</h2><blockquote><p>alter   view 视图名 as 查询语句</p></blockquote><h2 id="5-删除"><a href="#5-删除" class="headerlink" title="5.删除"></a>5.删除</h2><blockquote><p>drop view  视图名</p></blockquote><h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><h2 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h2><blockquote><p>存储过程是事先经过编译并保存在数据库中的一段SQL语句集合，使用时调用即可</p></blockquote><h2 id="2-创建存储过程"><a href="#2-创建存储过程" class="headerlink" title="2.创建存储过程"></a>2.创建存储过程</h2><h3 id="2-1无参"><a href="#2-1无参" class="headerlink" title="2.1无参"></a>2.1无参</h3><blockquote><p>create proc  名字</p><p>as</p><p>begin</p><p>想要执行的查询语句</p><p>end</p></blockquote><h3 id="2-2有参"><a href="#2-2有参" class="headerlink" title="2.2有参"></a>2.2有参</h3><blockquote><p>create proc  名字  @ 参数1  参数1的类型 ,  @参数2  参数2的类型 , ……..</p><p>as</p><p>begin</p><p>想要执行的查询语句</p><p>end</p><p>例：查询某学生指定课程号的成绩和学分</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> proc  p1  <span class="variable">@sno</span>  <span class="type">varchar</span>(<span class="number">13</span>) ,  <span class="variable">@cno</span>  <span class="type">varchar</span>(<span class="number">13</span>)  </span><br><span class="line"></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sc.<span class="operator">*</span> , cou.ccredit <span class="keyword">from</span> sc ,cou  <span class="keyword">where</span> sc.cno <span class="operator">=</span> <span class="variable">@cno</span>  <span class="keyword">and</span> sc.cno <span class="operator">=</span> cou.cno  <span class="keyword">and</span> sno <span class="operator">=</span> <span class="variable">@sno</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="3-执行存储过程"><a href="#3-执行存储过程" class="headerlink" title="3.执行存储过程"></a>3.执行存储过程</h2><blockquote><p>exec  名字</p><p>exec 名字  参数1，参数2</p></blockquote><h2 id="4-修改-1"><a href="#4-修改-1" class="headerlink" title="4.修改"></a>4.修改</h2><blockquote><p>alter proc 名字 +修改的内容</p><p>无参的可以修改为有参的</p><p>例：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">alert  proc  p1  @sno  varchar(13) ,  @cno  varchar(13)  </span><br><span class="line"></span><br><span class="line">as</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">select sc.* , cou.ccredit from sc ,cou  where sc.cno = @cno  and sc.cno = cou.cno  and sno = @sno</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure><h2 id="5-删除-1"><a href="#5-删除-1" class="headerlink" title="5.删除"></a>5.删除</h2><blockquote><p>drop  proc  名字</p></blockquote><h1 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h1><h2 id="1-概念-1"><a href="#1-概念-1" class="headerlink" title="1.概念"></a>1.概念</h2><blockquote><p>监视某种情况，并触发某种操作，当对一个表格进行增删改就有可能自动激活执行它</p><p>一个表可以创建多个 After触发器，但只能创建一个 instead of触发器</p><p>after<br>  这类触发器是在记录已经被修改完，事务已提交后被触发执行。主要用记录变更后的处理或检查，一旦发现BUG，可以使用ROLLBACK TRANSACTION语句回滚本次操作。</p><p>instead of<br>  这类触发器不去执行其定义的操作（Insert、update、delete），交给触发器执行，触发器检查操作是否正确，若正确则执行操作。这类触发器用来取代原本的操作，在记录变更之前被触发。</p></blockquote><h2 id="2-创建触发器"><a href="#2-创建触发器" class="headerlink" title="2.创建触发器"></a>2.创建触发器</h2><blockquote><p>create  trigger  触发器名  on  表名</p><p>after  &#x2F;instead of（之前&#x2F;之后）</p><p>update&#x2F;delete&#x2F;insert （改&#x2F;删&#x2F;增）</p><p>as<br>begin<br>    代码段<br>end</p></blockquote><h2 id="3-例子"><a href="#3-例子" class="headerlink" title="3.例子"></a>3.例子</h2><blockquote><p>stu学生表人数不能超过17</p><p><strong>写法1：</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> t1 <span class="keyword">on</span> stu after <span class="keyword">insert</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">if  (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu) <span class="operator">&gt;</span> <span class="number">17</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">print <span class="string">&#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rollback</span> tran</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">print <span class="string">&#x27;right&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>正常插入</p><p><img src="https://cdn.jsdelivr.net/gh/liushuhuang/PicGo@main/img/202209171041291.png" alt="image-20220423100325837"></p><p>超过17</p><p><img src="https://cdn.jsdelivr.net/gh/liushuhuang/PicGo@main/img/202209171042622.png" alt="image-20220423100400815"></p></blockquote><blockquote><p><strong>写法2</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> t1 <span class="keyword">on</span> stu instead <span class="keyword">of</span>  <span class="keyword">insert</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">if  (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu) <span class="operator">&gt;</span> <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">print <span class="string">&#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rollback</span> tran</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">print <span class="string">&#x27;right&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@sno</span> <span class="type">varchar</span>(<span class="number">13</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@sname</span> <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@age</span> <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@sex</span> bit</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@mno</span> <span class="type">int</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@sno</span> <span class="operator">=</span> sno <span class="keyword">from</span> inserted</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@sname</span> <span class="operator">=</span> sname <span class="keyword">from</span> inserted</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@age</span> <span class="operator">=</span> age <span class="keyword">from</span> inserted</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@sex</span> <span class="operator">=</span> sex <span class="keyword">from</span> inserted</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@mno</span> <span class="operator">=</span> mno <span class="keyword">from</span> inserted</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu <span class="keyword">values</span>(<span class="variable">@sno</span>,<span class="variable">@sname</span>,<span class="variable">@age</span>,<span class="variable">@sex</span>,<span class="variable">@mno</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>解释</strong>：(1) inserted是一个表，在插入之前数据会保存在这个表李（还有deleted表，是在删除前会存在里面）</p><p>​(2) 插入的参数也可以不写全，看自己的需求</p></blockquote><blockquote><p>例2：stu表不能少于16人</p><p>写法1：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> t1 <span class="keyword">on</span> stu instead <span class="keyword">of</span> <span class="keyword">delete</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">if  (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu) <span class="operator">&lt;</span> <span class="number">17</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">print <span class="string">&#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rollback</span> tran</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">print <span class="string">&#x27;right&#x27;</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@sno</span> <span class="type">varchar</span>(<span class="number">13</span>)</span><br><span class="line"><span class="keyword">select</span>  <span class="variable">@sno</span> <span class="operator">=</span> sno <span class="keyword">from</span> deleted</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> stu <span class="keyword">where</span> sno <span class="operator">=</span> <span class="variable">@sno</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>写法2</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> t1 <span class="keyword">on</span> stu after <span class="keyword">delete</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">if  (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stu) <span class="operator">&lt;</span> <span class="number">17</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">print <span class="string">&#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rollback</span> tran</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">print <span class="string">&#x27;right&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>例3：当新增学生分数位55-59，将分数改为60</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> t2 <span class="keyword">on</span> sc instead <span class="keyword">of</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@sno</span> <span class="type">varchar</span>(<span class="number">13</span>)</span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@cno</span> <span class="type">varchar</span>(<span class="number">13</span>)</span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@grade</span> <span class="type">decimal</span>(<span class="number">5</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@sno</span> <span class="operator">=</span> sno <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@cno</span> <span class="operator">=</span> cno <span class="keyword">from</span> inserted</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@grade</span> <span class="operator">=</span> grade <span class="keyword">from</span> inserted</span><br><span class="line">if <span class="variable">@grade</span> <span class="operator">&gt;=</span> <span class="number">55</span> <span class="keyword">and</span> <span class="variable">@grade</span> <span class="operator">&lt;=</span><span class="number">59</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@grade</span> <span class="operator">=</span> <span class="number">60</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sc(sno,cno,grade) <span class="keyword">values</span>(<span class="variable">@sno</span>,<span class="variable">@cno</span>,<span class="variable">@grade</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="1-概念-2"><a href="#1-概念-2" class="headerlink" title="1.概念"></a>1.概念</h2><blockquote><p>类似avg，sum这种就是函数，他和存储过程很像，但是会有返回值</p><p>用户可以自定义自己的函数</p></blockquote><h2 id="2-定义一个函数"><a href="#2-定义一个函数" class="headerlink" title="2.定义一个函数"></a>2.定义一个函数</h2><blockquote><p>create function  函数名 （参数1 参数1的类型，参数2  参数2的类型，….）</p><p>returns  返回值类型</p><p>as</p><p>begin</p><p>​执行语句</p><p>​return  返回值</p><p>end</p></blockquote><h2 id="3-执行函数"><a href="#3-执行函数" class="headerlink" title="3.执行函数"></a>3.执行函数</h2><blockquote><p>select   dbo.函数名（参数1，参数2，…） </p></blockquote><h2 id="4-例子"><a href="#4-例子" class="headerlink" title="4.例子"></a>4.例子</h2><blockquote><p>例1：计算某门课的平均分</p><p>创建</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> fun1 (<span class="variable">@cno</span> <span class="type">varchar</span>(<span class="number">13</span>))</span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable">@avggrade</span> <span class="type">int</span></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@avggrade</span> <span class="operator">=</span> <span class="built_in">avg</span>(grade) <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="variable">@cno</span> <span class="operator">=</span> cno</span><br><span class="line"><span class="keyword">return</span> <span class="variable">@avggrade</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>执行</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> dbo.fun1(<span class="string">&#x27;20202&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>例2：输入专业号，返回该专业学生学号和姓名</p><p>创建</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> fun2 (<span class="variable">@mno</span> <span class="type">varchar</span>(<span class="number">13</span>))</span><br><span class="line"><span class="keyword">returns</span> <span class="variable">@Snosname</span> <span class="keyword">table</span>(</span><br><span class="line">sno <span class="type">varchar</span>(<span class="number">13</span>),</span><br><span class="line">sname <span class="type">varchar</span>(<span class="number">30</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="variable">@Snosname</span>(sno,sname) <span class="keyword">select</span> sno,sname <span class="keyword">from</span> stu <span class="keyword">where</span> <span class="variable">@mno</span> <span class="operator">=</span> mno</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>执行</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> fun2(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><p>例3：输入专业号返回这个专业所有学生每个课程对于成绩的一个表</p><p>创建</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> fun3(<span class="variable">@mno</span> <span class="type">varchar</span>(<span class="number">13</span>))</span><br><span class="line"><span class="keyword">returns</span> <span class="variable">@Snograde</span> <span class="keyword">table</span>(</span><br><span class="line">sno <span class="type">varchar</span>(<span class="number">13</span>),</span><br><span class="line">cno <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">grade <span class="type">decimal</span>(<span class="number">5</span>, <span class="number">2</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="variable">@Snograde</span>(sno,cno,grade) <span class="keyword">select</span> sno,cno,grade <span class="keyword">from</span> sc <span class="keyword">where</span> sno <span class="keyword">in</span> (<span class="keyword">select</span> sno <span class="keyword">from</span> stu <span class="keyword">where</span> <span class="variable">@mno</span> <span class="operator">=</span> mno)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><h2 id="1-概念-3"><a href="#1-概念-3" class="headerlink" title="1.概念"></a>1.概念</h2><blockquote><p>概念:索引是对数据库表中的一列或多列值进行排序的一种结构</p><p>目的是为了加快查询到速度，但是会占用一定的存储空间需要更新和维护</p></blockquote><h2 id="2-什么时候不创建"><a href="#2-什么时候不创建" class="headerlink" title="2.什么时候不创建"></a>2.什么时候不创建</h2><blockquote><p>1.频繁更新的字段或者经常增删改的字段，不适合创建索引（频繁变化导致索引也频繁变化，增大数据库工作量，降低效率。）</p><p>2.表的记录较少，不适合（不需要）建立索引</p><p>3.如果某列的数据重复数据过多，不适合创建索引（例：性别只有男，女之分，这种值不适合建立索引）</p><p>4.字段不在where语句出现时不要添加索引，如果where后含IS NULL 或IS NOT NULL或 like ‘%输入符%’等条件，不建议使用索引。只有在where语句出现，mysql才会去使用索引。</p></blockquote><h2 id="3-索引失效"><a href="#3-索引失效" class="headerlink" title="3.索引失效"></a>3.索引失效</h2><blockquote><p>1.有or必须条件全有索引，有一个没有索引，其他的有索引也会失效;<br>2.复合索引未用左列字段（复合索引必须要使用最左边的第一列，只有加了这一列，复合索引后面的才会生效）;<br>3.like以%开头，索引失效;<br>4.需要类型转换，索引失效;<br>5.where中索引列有运算，索引失效;<br>6.where中索引列使用了函数，索引失效;<br>7.如果mysql觉得全表扫描更快时（数据少），会自动进行全表扫描忽略索引，索引失效;</p></blockquote><h2 id="4-聚集索引和非聚集索引"><a href="#4-聚集索引和非聚集索引" class="headerlink" title="4.聚集索引和非聚集索引"></a>4.聚集索引和非聚集索引</h2><h2 id="1-概念-4"><a href="#1-概念-4" class="headerlink" title="1.概念"></a>1.概念</h2><blockquote><p>聚集索引：数据行的物理顺序和列值（一般是主键那列）的逻辑顺序相同，一个表只能有一个聚集索引</p><p>非聚集索引：数据行的物理顺序和列值的逻辑顺序可能不相同，一个表只能有一个或多个非聚集索引</p></blockquote><h2 id="2-创建"><a href="#2-创建" class="headerlink" title="2.创建"></a>2.创建</h2><blockquote><p>create  index  索引名  on  表名  （列名1  限制1 ，列名2  限制2）</p></blockquote><blockquote><p>例：按学号升序，课程号降序创建唯一索引</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index scno <span class="keyword">on</span> sc (sno <span class="keyword">asc</span>,cno <span class="keyword">desc</span>)</span><br></pre></td></tr></table></figure><h2 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h2><blockquote><p>drop index 索引名 on  表名</p><p>例：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> index scno <span class="keyword">on</span> sc</span><br></pre></td></tr></table></figure><h2 id="4-既然HASH比B-树更快，为什么MYSQL用B-树来存储索引呢？"><a href="#4-既然HASH比B-树更快，为什么MYSQL用B-树来存储索引呢？" class="headerlink" title="4.既然HASH比B+树更快，为什么MYSQL用B+树来存储索引呢？"></a>4.既然HASH比B+树更快，为什么MYSQL用B+树来存储索引呢？</h2><blockquote><p>MySQL中存储索引用到的数据结构是B+树，B+树的查询时间跟树的高度有关，是log(n)，如果用hash存储，那么查询时间是O(1)。</p><p>采用Hash来存储确实要更快，但是采用B+树来存储索引的原因主要有以下两点：</p><p>一、从内存角度上说，数据库中的索引一般是在磁盘上，数据量大的情况可能无法一次性装入内存， B+树的设计可以允许数据分批加载。</p><p>二、从业务场景上说，如果只选择一个数据那确实是hash更快，但是数据库中经常会选中多条，这时候 由于B+树索引有序，并且又有链表相连，它的查询效率比hash就快很多了</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>反射</title>
      <link href="/2022/09/07/%E5%8F%8D%E5%B0%84/"/>
      <url>/2022/09/07/%E5%8F%8D%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><h2 id="1-反射有什么用"><a href="#1-反射有什么用" class="headerlink" title="1.反射有什么用"></a>1.反射有什么用</h2><p>通过反射可以操作字节码</p><h2 id="2-反射相关的类"><a href="#2-反射相关的类" class="headerlink" title="2.反射相关的类"></a>2.反射相关的类</h2><blockquote><p>Java.lang.Class 代表字节码文件</p><p>java.lang.reflect. Field代表字节码中的属性字节码</p><p>java.lang.reflect. Method 代表字节码中的方法字节码</p><p>java.lang.reflect. Constructor<T> 代表字节码中的构造方法字节码</p><p>java.lang.reflect. Proxy  动态代理使用</p></blockquote><h2 id="3-获取字节码（获取Class类）"><a href="#3-获取字节码（获取Class类）" class="headerlink" title="3.获取字节码（获取Class类）"></a>3.获取字节码（获取Class类）</h2><blockquote><p>1.Class.forname(完整类名（带包名）)  将class文件加载到方法区</p><p>2.对象的getClass方法</p><p>3.java中任何一种类型，包括基本数据类型，都有一个class属性</p><p><img src="https://cdn.jsdelivr.net/gh/liushuhuang/PicGo@main/img/202209171038056.png" alt="image-20220511125717461"></p></blockquote><p>通过不同方式获得的class对象是同一个</p><p>字节码文件装载到jvm，只要有一份</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux命令</title>
      <link href="/2022/09/07/linux%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/09/07/linux%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="进程相关"><a href="#进程相关" class="headerlink" title="进程相关"></a>进程相关</h1><p>通过进程名找到进程：</p><blockquote><p>ps aux | grep 进程名</p></blockquote><p>杀死进程：</p><blockquote><p>Kill -9 进程PID</p></blockquote><h1 id="查看文件："><a href="#查看文件：" class="headerlink" title="查看文件："></a>查看文件：</h1><blockquote><p>More （只能往后看）</p></blockquote><blockquote><p>Less （可以往前也可以往后）</p></blockquote><blockquote><p>（more空格翻页，空格下一行；less用方向键上下行；空格键 滚动一行回车键 滚动一页） </p></blockquote><blockquote><p>tail -f 文件名 （实时动态实时显示当前的日志）</p></blockquote><blockquote><p>tail -f -n 100 文件名 查看最后（最近）100行</p></blockquote><blockquote><p>hand -f -n 100 查看前100行</p></blockquote><blockquote><p>（tail 和hand不能翻页，more和less可以） </p></blockquote><h1 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h1><blockquote><p>查看端口是否被占用</p></blockquote><blockquote><p>netstat  -anp | grep  端口号</p></blockquote><blockquote><p>结果中有Listen表示被占用</p></blockquote><blockquote><p>（Ps：<strong>LISTENING并不表示被占用</strong>）</p></blockquote><blockquote><p>查看当前所有已经使用的端口情况</p></blockquote><blockquote><p>netstat  -nultp（此处不用加端口号）</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
